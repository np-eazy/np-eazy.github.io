{"ast":null,"code":"import _classCallCheck from\"/Users/joeyzhu/Projects/homepage/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";import _createClass from\"/Users/joeyzhu/Projects/homepage/node_modules/@babel/runtime/helpers/esm/createClass.js\";export var Grid=/*#__PURE__*/function(){function Grid(xSize,ySize){_classCallCheck(this,Grid);this.array=new Array(ySize);this.xSize=xSize;this.ySize=ySize;for(var y=0;y<ySize;y++){this.array[y]=new Array(xSize);for(var x=0;x<xSize;x++){this.array[y][x]=0;}}}_createClass(Grid,[{key:\"getVal\",value:function getVal(x,y){return this.array[y][x];}},{key:\"setVal\",value:function setVal(x,y,val){this.array[y][x]=val;}// Desctructive addition of new grid\n},{key:\"add\",value:function add(other){for(var y=0;y<this.ySize;y++){for(var x=0;x<this.xSize;x++){this.array[y][x]+=other.array[y][x];}}}// Desctructive subtraction of new grid\n},{key:\"subtract\",value:function subtract(other){for(var y=0;y<this.ySize;y++){for(var x=0;x<this.xSize;x++){this.array[y][x]-=other.array[y][x];}}}// Destructive scaling of all grid values\n},{key:\"scale\",value:function scale(factor){for(var y=0;y<this.ySize;y++){for(var x=0;x<this.xSize;x++){this.array[y][x]*=factor;}}}// Destructively blend with another grid\n},{key:\"interpolate\",value:function interpolate(other,fraction){for(var y=0;y<this.ySize;y++){for(var x=0;x<this.xSize;x++){this.array[y][x]=this.array[y][x]+fraction*(other.array[y][x]-this.array[y][x]);}}}// Deepcopy this grid's values to another grid\n},{key:\"copyTo\",value:function copyTo(other){for(var y=0;y<this.ySize;y++){for(var x=0;x<this.xSize;x++){other.setVal(x,y,this.getVal(x,y));}}}// Constructive addition of new grid\n},{key:\"createSum\",value:function createSum(other){var newGrid=new Grid(this.xSize,this.ySize);for(var y=0;y<this.ySize;y++){for(var x=0;x<this.xSize;x++){newGrid.array[y][x]=this.array[y][x]+other.array[y][x];}}return newGrid;}// Constructive subtraction of new grid\n},{key:\"createDelta\",value:function createDelta(other){var newGrid=new Grid(this.xSize,this.ySize);for(var y=0;y<this.ySize;y++){for(var x=0;x<this.xSize;x++){newGrid.array[y][x]=this.array[y][x]+other.array[y][x];}}return newGrid;}// Destructive scaling of all grid values\n},{key:\"createScale\",value:function createScale(factor){var newGrid=new Grid(this.xSize,this.ySize);for(var y=0;y<this.ySize;y++){for(var x=0;x<this.xSize;x++){newGrid.array[y][x]=this.array[y][x]*factor;}}return newGrid;}},{key:\"createInterpolation\",value:function createInterpolation(other,fraction){var newGrid=new Grid(this.xSize,this.ySize);for(var y=0;y<this.ySize;y++){for(var x=0;x<this.xSize;x++){newGrid.array[y][x]=this.array[y][x]+fraction*(other.array[y][x]-this.array[y][x]);}}return newGrid;}}]);return Grid;}();","map":{"version":3,"names":["Grid","xSize","ySize","array","Array","y","x","val","other","factor","fraction","setVal","getVal","newGrid"],"sources":["/Users/joeyzhu/Projects/homepage/src/utils/grid.js"],"sourcesContent":["export class Grid {\n    constructor(xSize, ySize) {\n        this.array = new Array(ySize);\n        this.xSize = xSize;\n        this.ySize = ySize;\n        for (var y = 0; y < ySize; y++) {\n            this.array[y] = new Array(xSize);\n            for (var x = 0; x < xSize; x++) {\n                this.array[y][x] = 0;\n            }\n        }\n    }\n    getVal(x, y) { return this.array[y][x]; }\n    setVal(x, y, val) { this.array[y][x] = val; }\n\n    // Desctructive addition of new grid\n    add(other) { \n        for (var y = 0; y < this.ySize; y++) {\n            for (var x = 0; x < this.xSize; x++) {\n                this.array[y][x] += other.array[y][x];\n            }        \n        }\n    }\n\n    // Desctructive subtraction of new grid\n    subtract(other) { \n        for (var y = 0; y < this.ySize; y++) {\n            for (var x = 0; x < this.xSize; x++) {\n                this.array[y][x] -= other.array[y][x];\n            }        \n        }\n    }\n\n    // Destructive scaling of all grid values\n    scale(factor) {\n        for (var y = 0; y < this.ySize; y++) {\n            for (var x = 0; x < this.xSize; x++) {\n                this.array[y][x] *= factor;\n            }        \n        }\n    }\n\n    // Destructively blend with another grid\n    interpolate(other, fraction) { \n        for (var y = 0; y < this.ySize; y++) {\n            for (var x = 0; x < this.xSize; x++) {\n                this.array[y][x] = this.array[y][x] + fraction * (other.array[y][x] - this.array[y][x]);\n            }        \n        }\n    }\n\n    // Deepcopy this grid's values to another grid\n    copyTo(other) {\n        for (var y = 0; y < this.ySize; y++) {\n            for (var x = 0; x < this.xSize; x++) {\n                other.setVal(x, y, \n                    this.getVal(x, y));\n            }        \n        }\n    }\n\n    // Constructive addition of new grid\n    createSum(other) {\n        var newGrid = new Grid(this.xSize, this.ySize);\n        for (var y = 0; y < this.ySize; y++) {\n            for (var x = 0; x < this.xSize; x++) {\n                newGrid.array[y][x] = this.array[y][x] + other.array[y][x];\n            }        \n        }\n        return newGrid;\n    }\n\n    // Constructive subtraction of new grid\n    createDelta(other) { \n        var newGrid = new Grid(this.xSize, this.ySize);\n        for (var y = 0; y < this.ySize; y++) {\n            for (var x = 0; x < this.xSize; x++) {\n                newGrid.array[y][x] = this.array[y][x] + other.array[y][x];\n            }        \n        }\n        return newGrid;\n    }\n\n    // Destructive scaling of all grid values\n    createScale(factor) {\n        var newGrid = new Grid(this.xSize, this.ySize);\n        for (var y = 0; y < this.ySize; y++) {\n            for (var x = 0; x < this.xSize; x++) {\n                newGrid.array[y][x] = this.array[y][x] * factor;\n            }        \n        }\n        return newGrid;\n    }\n\n    createInterpolation(other, fraction) { \n        var newGrid = new Grid(this.xSize, this.ySize);\n        for (var y = 0; y < this.ySize; y++) {\n            for (var x = 0; x < this.xSize; x++) {\n                newGrid.array[y][x] = this.array[y][x] + fraction * (other.array[y][x] - this.array[y][x]);\n            }        \n        }\n        return newGrid;\n    }\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}