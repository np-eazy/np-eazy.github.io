{"ast":null,"code":"import { X, Y, G0, G1 } from './graphic-utils.js';\nimport { WHITE, THEME_GRAY_6B, interpolateColor } from '../../../utils/colors';\nimport { interpolateTrig } from '../../../utils/functions.js';\n\n// The colors here are on unit scale to make calculations easier in lieu of importing utils/colors.js\nfunction componentToHex(c) {\n  var hex = c.toString(16);\n  return hex.length == 1 ? \"0\" + hex : hex;\n}\nfunction drawCircle(canvas, c, radius, color) {\n  canvas.beginPath();\n  canvas.arc(c[X], c[Y], radius, 0, 2 * Math.PI);\n  canvas.fillStyle = color;\n  canvas.fill();\n}\nfunction project(x, y, z, t) {\n  var period = 1 / 10;\n  var newX = x * Math.cos(t * period) + z * Math.sin(t * period);\n  var newY = y;\n  var newZ = x * -Math.sin(t * period) + z * Math.cos(t * period);\n  var parallax = 0.02;\n  var centerX = 0;\n  var centerY = 0;\n  newX += (newX - centerX) * newZ * parallax;\n  newY += (newY - centerY) * newZ * parallax;\n  var scale = 100;\n  return [(newX + 1) * scale + 800, (newY + 1) * scale + 300];\n}\nconst AtomGraphics = _ref => {\n  let {\n    atom\n  } = _ref;\n  //atom.particles.sort((p1, p2) => p1.z > p2.z ? 1 : (p1.z < p2.z ? -1 : 0));\n  function render(canvas) {\n    atom.particles.sort((particleA, particleB) => particleA.z > particleB.z ? 1 : particleA.z < particleB.z ? -1 : 0);\n    for (var i = 0; i < atom.particles.length; i++) {\n      var p = atom.particles[i];\n      var period = 1 / 10;\n      var newX = p.x * Math.cos(atom.timer * period) + p.z * Math.sin(atom.timer * period);\n      var newZ = p.x * -Math.sin(atom.timer * period) + p.z * Math.cos(atom.timer * period);\n      var color = interpolateColor(THEME_GRAY_6B, WHITE, Math.max(0, Math.min(1, (2 + p.z * 2) / 4.0)), interpolateTrig);\n      var point = project(p.x, p.y, p.z, atom.timer);\n      drawCircle(canvas, [point[0], point[1]], Math.max(1, Math.min(2, (2 + newZ) / 2)), color.getHex(), atom.timer);\n    }\n  }\n  var canv = document.getElementById(\"fold-graphics\");\n  var ctx = canv != null ? canv.getContext('2d') : null;\n  if (ctx != null && atom != undefined) {\n    ctx.clearRect(G0[X], G0[Y], G1[X], G1[Y]);\n    render(ctx);\n  }\n};\n_c = AtomGraphics;\nexport default AtomGraphics;\nvar _c;\n$RefreshReg$(_c, \"AtomGraphics\");","map":{"version":3,"names":["X","Y","G0","G1","WHITE","THEME_GRAY_6B","interpolateColor","interpolateTrig","componentToHex","c","hex","toString","length","drawCircle","canvas","radius","color","beginPath","arc","Math","PI","fillStyle","fill","project","x","y","z","t","period","newX","cos","sin","newY","newZ","parallax","centerX","centerY","scale","AtomGraphics","atom","render","particles","sort","particleA","particleB","i","p","timer","max","min","point","getHex","canv","document","getElementById","ctx","getContext","undefined","clearRect"],"sources":["/Users/joeyzhu/Projects/joey-j-zhu.github.io/src/components/fold/fold-graphics/atom-graphics.js"],"sourcesContent":["\nimport {X, Y, G0, G1 } from './graphic-utils.js';\nimport { WHITE, THEME_GRAY_6B, interpolateColor } from '../../../utils/colors';\nimport { interpolateTrig } from '../../../utils/functions.js';\n\n// The colors here are on unit scale to make calculations easier in lieu of importing utils/colors.js\nfunction componentToHex(c) {\n    var hex = c.toString(16);\n    return hex.length == 1 ? \"0\" + hex : hex;\n}\n\nfunction drawCircle(canvas, c, radius, color) {\n    canvas.beginPath();\n    canvas.arc(c[X], c[Y], radius, 0 , 2 * Math.PI);\n    canvas.fillStyle = color;\n    canvas.fill();\n}\n\nfunction project(x, y, z, t) {\n    var period = 1 / 10;\n    var newX = x * Math.cos(t * period) + z * Math.sin(t * period);\n    var newY = y;\n    var newZ = x * -Math.sin(t * period) + z * Math.cos(t * period);\n    var parallax = 0.02;\n    var centerX = 0;\n    var centerY = 0;\n    newX += (newX - centerX) * newZ * parallax;\n    newY += (newY - centerY) * newZ * parallax;\n\n    var scale = 100;\n    return [(newX + 1) * scale + 800, (newY + 1) * scale + 300];\n}\n\nconst AtomGraphics = ({\n    atom,\n}) => {\n    //atom.particles.sort((p1, p2) => p1.z > p2.z ? 1 : (p1.z < p2.z ? -1 : 0));\n    function render(canvas) {\n        atom.particles.sort((particleA, particleB) => particleA.z > particleB.z ? 1 : (particleA.z < particleB.z ? -1 : 0));\n        for (var i = 0; i < atom.particles.length; i++) {\n            var p = atom.particles[i];\n            var period = 1 / 10;\n            var newX = p.x * Math.cos(atom.timer * period) + p.z * Math.sin(atom.timer * period);\n            var newZ = p.x * -Math.sin(atom.timer * period) + p.z * Math.cos(atom.timer * period);\n            var color = interpolateColor(THEME_GRAY_6B, WHITE, Math.max(0, Math.min(1, (2 + p.z * 2) / 4.0)), interpolateTrig);\n            var point = project(p.x, p.y, p.z, atom.timer);\n            drawCircle(canvas, [point[0], point[1]], Math.max(1, Math.min(2, (2 + newZ) / 2)), color.getHex(), atom.timer);\n        }\n    }\n\n    var canv = document.getElementById(\"fold-graphics\");\n    var ctx = canv != null ? canv.getContext('2d') : null;\n\n    if (ctx != null && atom != undefined) {\n        ctx.clearRect(G0[X], G0[Y], G1[X], G1[Y]);\n        render(ctx);\n    }\n};\n\nexport default AtomGraphics;\n\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}