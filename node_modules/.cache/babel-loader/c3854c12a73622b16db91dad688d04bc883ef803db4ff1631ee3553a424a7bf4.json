{"ast":null,"code":"import { X, Y, GRID_SIZE, T, G0, G1, BASE, RAD } from './graphic-utils.js';\nfunction clip1d(a) {\n  return Math.min(Math.max(0, a), 0.9999);\n}\n\n// The colors here are on unit scale to make calculations easier in lieu of importing utils/colors.js\nfunction componentToHex(c) {\n  var hex = c.toString(16);\n  return hex.length == 1 ? \"0\" + hex : hex;\n}\nfunction rgbToHex(r, g, b) {\n  return \"#\" + componentToHex(Math.floor(r * 256)) + componentToHex(Math.floor(g * 256)) + componentToHex(Math.floor(b * 256));\n}\nfunction localToGlobal(c) {\n  return [G0[X] + (G1[X] - G0[X]) * c[X] / GRID_SIZE[X], G0[Y] + (G1[Y] - G0[Y]) * c[Y] / GRID_SIZE[Y]];\n}\nfunction drawLine(canvas, c1, c2, width, color) {\n  canvas.strokeStyle = color;\n  canvas.lineWidth = width;\n  canvas.beginPath();\n  canvas.moveTo(c1[X], c1[Y]);\n  canvas.lineTo(c2[X], c2[Y]);\n  canvas.stroke();\n}\nfunction drawDiagCross(canvas, center, length, color) {\n  length = Math.max(0, length);\n  if (length > 0) {\n    drawLine(canvas, [center[X] - length, center[Y] - length], [center[X] + length, center[Y] + length], 2, color);\n    drawLine(canvas, [center[X] + length, center[Y] - length], [center[X] - length, center[Y] + length], 2, color);\n  }\n}\nfunction drawCircle(canvas, c, radius, color) {\n  canvas.beginPath();\n  canvas.arc(c[X], c[Y], radius, 0, 2 * Math.PI);\n  canvas.fillStyle = color;\n  canvas.fill();\n}\nfunction project(x, y, z) {\n  return [(x + 1) * 200, y * 200];\n}\nconst AtomGraphics = _ref => {\n  let {\n    atom\n  } = _ref;\n  function render(canvas) {\n    for (var i = 0; i < atom.particles.length; i++) {\n      var p = atom.particles[i];\n      var point = project(p.x, p.y, p.z);\n      drawDiagCross(canvas, [point[0], point[1]], 3, \"#ffffff\");\n    }\n  }\n  var canv = document.getElementById(\"fold-graphics\");\n  var ctx = canv != null ? canv.getContext('2d') : null;\n  if (ctx != null && atom != undefined) {\n    ctx.clearRect(G0[X], G0[Y], G1[X], G1[Y]);\n    render(ctx);\n  }\n};\n_c = AtomGraphics;\nexport default AtomGraphics;\nvar _c;\n$RefreshReg$(_c, \"AtomGraphics\");","map":{"version":3,"names":["X","Y","GRID_SIZE","T","G0","G1","BASE","RAD","clip1d","a","Math","min","max","componentToHex","c","hex","toString","length","rgbToHex","r","g","b","floor","localToGlobal","drawLine","canvas","c1","c2","width","color","strokeStyle","lineWidth","beginPath","moveTo","lineTo","stroke","drawDiagCross","center","drawCircle","radius","arc","PI","fillStyle","fill","project","x","y","z","AtomGraphics","atom","render","i","particles","p","point","canv","document","getElementById","ctx","getContext","undefined","clearRect"],"sources":["/Users/joeyzhu/Projects/joey-j-zhu.github.io/src/components/fold/fold-graphics/atom-graphics.js"],"sourcesContent":["\nimport {X, Y, GRID_SIZE, T, G0, G1, BASE, RAD} from './graphic-utils.js';\n\nfunction clip1d(a) {\n    return Math.min(Math.max(0, a), 0.9999);\n}\n\n// The colors here are on unit scale to make calculations easier in lieu of importing utils/colors.js\nfunction componentToHex(c) {\n    var hex = c.toString(16);\n    return hex.length == 1 ? \"0\" + hex : hex;\n}\n\nfunction rgbToHex(r, g, b) {\n    return \"#\" + componentToHex(Math.floor(r * 256)) + componentToHex(Math.floor(g * 256)) + componentToHex(Math.floor(b * 256));\n}\n\nfunction localToGlobal(c) {\n    return [G0[X] + (G1[X] - G0[X]) * c[X] / GRID_SIZE[X], G0[Y] + (G1[Y] - G0[Y]) * c[Y] / GRID_SIZE[Y]];\n}\n\nfunction drawLine(canvas, c1, c2, width, color) {\n    canvas.strokeStyle = color;\n    canvas.lineWidth = width;\n    canvas.beginPath();\n    canvas.moveTo(c1[X], c1[Y]);\n    canvas.lineTo(c2[X], c2[Y]);\n    canvas.stroke();\n}\n\nfunction drawDiagCross(canvas, center, length, color) {\n    length = Math.max(0, length);\n    if (length > 0) {\n        drawLine(canvas, \n            [center[X] - length, center[Y] - length], \n            [center[X] + length, center[Y] + length], \n            2, color);\n        drawLine(canvas, \n            [center[X] + length, center[Y] - length], \n            [center[X] - length, center[Y] + length], \n            2, color);\n    }\n}\n\nfunction drawCircle(canvas, c, radius, color) {\n    canvas.beginPath();\n    canvas.arc(c[X], c[Y], radius, 0 , 2 * Math.PI);\n    canvas.fillStyle = color;\n    canvas.fill();\n}\n\nfunction project(x, y, z) {\n    return [(x + 1) * 200, (y) * 200];\n}\n\nconst AtomGraphics = ({\n    atom,\n}) => {\n    function render(canvas) {\n        for (var i = 0; i < atom.particles.length; i++) {\n            var p = atom.particles[i];\n            var point = project(p.x, p.y, p.z);\n            drawDiagCross(canvas, [point[0], point[1]], 3, \"#ffffff\");\n        }\n    }\n\n    var canv = document.getElementById(\"fold-graphics\");\n    var ctx = canv != null ? canv.getContext('2d') : null;\n\n    if (ctx != null && atom != undefined) {\n        ctx.clearRect(G0[X], G0[Y], G1[X], G1[Y]);\n        render(ctx);\n    }\n};\n\nexport default AtomGraphics;\n\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}