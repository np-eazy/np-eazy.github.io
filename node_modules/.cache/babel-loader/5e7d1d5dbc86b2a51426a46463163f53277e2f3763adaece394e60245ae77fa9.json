{"ast":null,"code":"var _jsxFileName = \"/Users/joeyzhu/Projects/homepage/src/components/fold/fold-canvas.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { default as FoldGraphics } from './fold-graphics/fold-graphics';\nimport { default as System } from './fold-graphics/system';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FoldCanvas = _ref => {\n  _s();\n  let {\n    height,\n    width\n  } = _ref;\n  const [system, setSystem] = useState(new System({}));\n  const [canvasTimer, setCanvasTimer] = useState(0);\n  useEffect(() => {\n    const interval = setInterval(() => {\n      setSystem(system.update(1));\n      setCanvasTimer(canvasTimer + 1);\n    }, 20);\n    return () => clearInterval(interval);\n  }, [canvasTimer]);\n  return /*#__PURE__*/_jsxDEV(\"canvas\", {\n    id: \"fold-graphics\",\n    style: {\n      opacity: 0.3\n    },\n    height: height,\n    width: width,\n    children: /*#__PURE__*/_jsxDEV(FoldGraphics, {\n      system: system\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 9\n  }, this);\n};\n_s(FoldCanvas, \"BH6PMqBVtqJgKpkw2AhTl0eSmCU=\");\n_c = FoldCanvas;\nexport default FoldCanvas;\nvar _c;\n$RefreshReg$(_c, \"FoldCanvas\");","map":{"version":3,"names":["React","useState","useEffect","default","FoldGraphics","System","FoldCanvas","height","width","system","setSystem","canvasTimer","setCanvasTimer","interval","setInterval","update","clearInterval","opacity"],"sources":["/Users/joeyzhu/Projects/homepage/src/components/fold/fold-canvas.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\nimport { default as FoldGraphics } from'./fold-graphics/fold-graphics';\nimport { default as System } from './fold-graphics/system';\n\nconst FoldCanvas = ({\n    height,\n    width,\n}) => {\n    \n    const [system, setSystem] = useState(new System({}));\n    const [canvasTimer, setCanvasTimer] = useState(0);\n\n    useEffect(() => {\n        const interval = setInterval(() => {\n            setSystem(system.update(1));\n            setCanvasTimer(canvasTimer + 1);\n        }, 20);\n        return () => clearInterval(interval);\n      }, [canvasTimer]);\n\n    return (\n        <canvas id=\"fold-graphics\" style={{opacity:0.3}} height={height} width={width}>\n            <FoldGraphics system={system} />\n        </canvas>\n    );\n};\n\nexport default FoldCanvas;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAElD,SAASC,OAAO,IAAIC,YAAY,QAAO,+BAA+B;AACtE,SAASD,OAAO,IAAIE,MAAM,QAAQ,wBAAwB;AAAC;AAE3D,MAAMC,UAAU,GAAG,QAGb;EAAA;EAAA,IAHc;IAChBC,MAAM;IACNC;EACJ,CAAC;EAEG,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGT,QAAQ,CAAC,IAAII,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;EACpD,MAAM,CAACM,WAAW,EAAEC,cAAc,CAAC,GAAGX,QAAQ,CAAC,CAAC,CAAC;EAEjDC,SAAS,CAAC,MAAM;IACZ,MAAMW,QAAQ,GAAGC,WAAW,CAAC,MAAM;MAC/BJ,SAAS,CAACD,MAAM,CAACM,MAAM,CAAC,CAAC,CAAC,CAAC;MAC3BH,cAAc,CAACD,WAAW,GAAG,CAAC,CAAC;IACnC,CAAC,EAAE,EAAE,CAAC;IACN,OAAO,MAAMK,aAAa,CAACH,QAAQ,CAAC;EACtC,CAAC,EAAE,CAACF,WAAW,CAAC,CAAC;EAEnB,oBACI;IAAQ,EAAE,EAAC,eAAe;IAAC,KAAK,EAAE;MAACM,OAAO,EAAC;IAAG,CAAE;IAAC,MAAM,EAAEV,MAAO;IAAC,KAAK,EAAEC,KAAM;IAAA,uBAC1E,QAAC,YAAY;MAAC,MAAM,EAAEC;IAAO;MAAA;MAAA;MAAA;IAAA;EAAG;IAAA;IAAA;IAAA;EAAA,QAC3B;AAEjB,CAAC;AAAC,GArBIH,UAAU;AAAA,KAAVA,UAAU;AAuBhB,eAAeA,UAAU;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}