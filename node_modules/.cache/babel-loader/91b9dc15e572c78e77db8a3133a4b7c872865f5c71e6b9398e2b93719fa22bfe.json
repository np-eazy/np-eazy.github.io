{"ast":null,"code":"import _objectDestructuringEmpty from\"/Users/joeyzhu/Projects/joey-j-zhu.github.io/node_modules/@babel/runtime/helpers/esm/objectDestructuringEmpty.js\";import _classCallCheck from\"/Users/joeyzhu/Projects/joey-j-zhu.github.io/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";import _createClass from\"/Users/joeyzhu/Projects/joey-j-zhu.github.io/node_modules/@babel/runtime/helpers/esm/createClass.js\";import{X,Y,G0,G1,MAX_GRID_BUFFER_SIZE,GRID_SIZE,MOVE_RATE,SWAPS_PER_FRAME,MAX_SWAP_RANGE,SWAP_FRACTION,FLUCTUATION_MAGNITUDE,VECOCITY_DECAY_RATE,DECAY_FACTOR,FLUCTUATION_RADIUS,VWEIGHT}from'./graphic-utils.js';import{Grid}from'../../../utils/grid';import{interpolate,randint,stoc}from'../../../utils/functions';function clip(c){return[Math.min(Math.max(0,c[X]),GRID_SIZE[X]-1),Math.min(Math.max(0,c[Y]),GRID_SIZE[Y]-1)];}// Randomly sample from the entire grid\nfunction gridSample(){return[randint(0,GRID_SIZE[X]),randint(0,GRID_SIZE[Y])];}// Sample from the axis-aligned square of length 2d+1 centered on x, y\nfunction boxSample(c,d){var dx=randint(0-d,d+1);var dy=randint(0-d,d+1);return clip([c[X]+dx,c[Y]+dy]);}function neighbor(c,d,v){return boxSample([c[X]+stoc(v[X]),c[Y]+stoc(v[Y])],d);}function transfer(grid,x1,y1,x2,y2,amt1,amt2){var cell1=grid.getVal(x1,y1);var cell2=grid.getVal(x2,y2);grid.setVal(x1,y1,interpolate(cell1,cell2,amt1));grid.setVal(x2,y2,interpolate(cell1,cell2,amt2));}function step(mainGrid,maxSwapRange,swapFraction,xVelocityGrid,yVelocityGrid){var cellA=gridSample();var cellB=neighbor(cellA,maxSwapRange,[xVelocityGrid.getVal(cellA[X],cellA[Y]),yVelocityGrid.getVal(cellA[X],cellA[Y])]);if(cellB[X]==clip(cellB)[X]&&cellB[Y]==clip(cellB)[Y]){// If the neighbor is valid, mix\ntransfer(mainGrid,cellA[X],cellA[Y],Math.floor(cellB[X]),Math.floor(cellB[Y]),swapFraction,swapFraction);}else{// Else, just drain\nmainGrid.setVal(cellA[X],cellA[Y],mainGrid.getVal(cellA[X],cellA[Y])*(1-swapFraction));}}function emptyGrid(){return new Grid(GRID_SIZE[X],GRID_SIZE[Y]);}var System=/*#__PURE__*/function(){function System(_ref){_objectDestructuringEmpty(_ref);_classCallCheck(this,System);this.timer=0;this.smoothGrid=emptyGrid();this.totalGrid=emptyGrid();this.gridStream=[emptyGrid()];this.currGridBufferSize=1;this.canvasSize=[G1[X]-G0[X],G1[Y]-G0[Y]];this.ticks=0;this.mainGrid=emptyGrid();this.vxGrid=emptyGrid();this.vyGrid=emptyGrid();}_createClass(System,[{key:\"addGridFrame\",value:function addGridFrame(newGrid){// Add to the total grid\nthis.totalGrid.add(newGrid);if(this.currGridBufferSize==MAX_GRID_BUFFER_SIZE){// If buffer is full, take out bottom of stream and set values to incoming grid\n// And recalculate sliding total\nvar last=this.gridStream.shift();this.totalGrid.subtract(last);newGrid.copyTo(last);this.gridStream.push(last);}else{// If buffer isn't full, add a copy of current and up counter\nvar newArr=emptyGrid();newGrid.copyTo(newArr);this.gridStream.push(newArr);this.currGridBufferSize++;}this.smoothGrid.interpolate(this.totalGrid.createScale(1/this.currGridBufferSize),MOVE_RATE);}},{key:\"pull\",value:function pull(grid,center,target,range){center[X]=Math.floor(center[X]);center[Y]=Math.floor(center[Y]);var ax=Math.max(0,center[X]-range);var bx=Math.min(grid.xSize-1,center[X]+range+1);var ay=Math.max(0,center[Y]-range);var by=Math.min(grid.ySize-1,center[Y]+range+1);for(var x=ax;x<=bx;x++){for(var y=ay;y<=by;y++){var dx=x-center[X];var dy=y-center[Y];var r2=dx*dx+dy*dy;grid.setVal(x,y,interpolate(grid.getVal(x,y),target,FLUCTUATION_MAGNITUDE/(r2+1)));}}}},{key:\"update\",value:function update(increment){// addFrame(mouse);\nthis.addGridFrame(this.mainGrid);// Run a number of Stochastic diffusion/flow iterations\nfor(var i=0;i<SWAPS_PER_FRAME;i++){step(this.mainGrid,MAX_SWAP_RANGE,SWAP_FRACTION,this.vxGrid,this.vyGrid);}this.mainGrid.scale(DECAY_FACTOR);this.vxGrid.scale(VECOCITY_DECAY_RATE);this.vyGrid.scale(VECOCITY_DECAY_RATE);if(this.timer%2==0){var fx=randint(0,GRID_SIZE[X]-1);var fy=randint(0,GRID_SIZE[Y]-1);var vx=(Math.random()-0.5)*5;var vy=(Math.random()-0.5)*5;var size=Math.random()*15;var dx=(Math.random()-0.5)*5;var dy=(Math.random()-0.5)*5;//this.mainGrid[fy][fx] += 0.5 * Math.random();\nthis.pull(this.mainGrid,[fx,fy],size,FLUCTUATION_RADIUS);this.pull(this.vxGrid,[fx,fy],-vx*VWEIGHT,FLUCTUATION_RADIUS);this.pull(this.vyGrid,[fx,fy],-vy*VWEIGHT,FLUCTUATION_RADIUS);fx+=dx*2;fy+=dy*2;var f=clip([fx,fy]);fx=f[X];fy=f[Y];//this.mainGrid[fy][fx] += 0.5 * Math.random();\nthis.pull(this.mainGrid,[fx,fy],-size,FLUCTUATION_RADIUS);this.pull(this.vxGrid,[fx,fy],vx*VWEIGHT,FLUCTUATION_RADIUS);this.pull(this.vyGrid,[fx,fy],vy*VWEIGHT,FLUCTUATION_RADIUS);}this.timer++;return this;}}]);return System;}();export default System;","map":{"version":3,"names":["X","Y","G0","G1","MAX_GRID_BUFFER_SIZE","GRID_SIZE","MOVE_RATE","SWAPS_PER_FRAME","MAX_SWAP_RANGE","SWAP_FRACTION","FLUCTUATION_MAGNITUDE","VECOCITY_DECAY_RATE","DECAY_FACTOR","FLUCTUATION_RADIUS","VWEIGHT","Grid","interpolate","randint","stoc","clip","c","Math","min","max","gridSample","boxSample","d","dx","dy","neighbor","v","transfer","grid","x1","y1","x2","y2","amt1","amt2","cell1","getVal","cell2","setVal","step","mainGrid","maxSwapRange","swapFraction","xVelocityGrid","yVelocityGrid","cellA","cellB","floor","emptyGrid","System","timer","smoothGrid","totalGrid","gridStream","currGridBufferSize","canvasSize","ticks","vxGrid","vyGrid","newGrid","add","last","shift","subtract","copyTo","push","newArr","createScale","center","target","range","ax","bx","xSize","ay","by","ySize","x","y","r2","increment","addGridFrame","i","scale","fx","fy","vx","random","vy","size","pull","f"],"sources":["/Users/joeyzhu/Projects/joey-j-zhu.github.io/src/components/fold/fold-graphics/system.js"],"sourcesContent":["import {X, Y, G0, G1, MAX_GRID_BUFFER_SIZE, GRID_SIZE,\n    MOVE_RATE, SWAPS_PER_FRAME, MAX_SWAP_RANGE, SWAP_FRACTION, FLUCTUATION_MAGNITUDE,\n    VECOCITY_DECAY_RATE, DECAY_FACTOR, FLUCTUATION_RADIUS, VWEIGHT} from './graphic-utils.js';\n\nimport {Grid} from '../../../utils/grid';\nimport {interpolate, randint, stoc} from '../../../utils/functions';\n\n\nfunction clip(c) {\n    return [Math.min(Math.max(0, c[X]), GRID_SIZE[X] - 1), Math.min(Math.max(0, c[Y]), GRID_SIZE[Y] - 1)];\n}\n\n// Randomly sample from the entire grid\nfunction gridSample() {\n    return [randint(0, GRID_SIZE[X]), randint(0, GRID_SIZE[Y])];\n}\n\n// Sample from the axis-aligned square of length 2d+1 centered on x, y\nfunction boxSample(c, d) {\n    var dx = randint(0 - d, d + 1);\n    var dy = randint(0 - d, d + 1);\n    return clip([c[X] + dx, c[Y] + dy]);\n}\n\nfunction neighbor(c, d, v) {\n    return boxSample([c[X] + stoc(v[X]), c[Y] + stoc(v[Y])], d);\n}\n\nfunction transfer(grid, x1, y1, x2, y2, amt1, amt2) {\n    var cell1 = grid.getVal(x1, y1);\n    var cell2 = grid.getVal(x2, y2);\n\n    grid.setVal(x1, y1, \n        interpolate(cell1, cell2, \n            amt1));\n    grid.setVal(x2, y2, \n        interpolate(cell1, cell2, \n            amt2));\n}\n\n\nfunction step(mainGrid, maxSwapRange, swapFraction, xVelocityGrid, yVelocityGrid) {\n    var cellA = gridSample();\n    var cellB = neighbor(cellA, maxSwapRange, \n        [xVelocityGrid.getVal(cellA[X], cellA[Y]), yVelocityGrid.getVal(cellA[X], cellA[Y])]);\n    if (cellB[X] == clip(cellB)[X] && cellB[Y] == clip(cellB)[Y]) {\n        // If the neighbor is valid, mix\n        transfer(\n            mainGrid, \n            cellA[X], cellA[Y], \n            Math.floor(cellB[X]), Math.floor(cellB[Y]), \n            swapFraction, swapFraction);\n    } else {\n        // Else, just drain\n        mainGrid.setVal(cellA[X], cellA[Y], \n            mainGrid.getVal(cellA[X], cellA[Y]) * (1 - swapFraction));\n    }\n}\n\nfunction emptyGrid() {\n    return new Grid(GRID_SIZE[X], GRID_SIZE[Y]);\n}\n\nconst System = class {\n    constructor ({}) {\n        this.timer = 0;\n        this.smoothGrid = emptyGrid();\n        this.totalGrid = emptyGrid();\n        this.gridStream = [emptyGrid()];\n\n        this.currGridBufferSize = 1;\n        this.canvasSize = [G1[X] - G0[X], G1[Y] - G0[Y]];\n        this.ticks = 0;\n\n        this.mainGrid = emptyGrid();\n        this.vxGrid = emptyGrid();\n        this.vyGrid = emptyGrid();\n    }\n\n    addGridFrame(newGrid) {\n        // Add to the total grid\n        this.totalGrid.add(newGrid);\n        \n        if (this.currGridBufferSize == MAX_GRID_BUFFER_SIZE) {\n            // If buffer is full, take out bottom of stream and set values to incoming grid\n            // And recalculate sliding total\n            var last = this.gridStream.shift();\n            this.totalGrid.subtract(last);\n            newGrid.copyTo(last);\n            this.gridStream.push(last);\n\n        } else {\n            // If buffer isn't full, add a copy of current and up counter\n            var newArr = emptyGrid();\n            newGrid.copyTo(newArr);\n            this.gridStream.push(newArr);\n            this.currGridBufferSize++;\n        }\n        \n        this.smoothGrid.interpolate(\n            this.totalGrid.createScale(1 / this.currGridBufferSize),\n            MOVE_RATE\n        );\n    }\n\n    pull(grid, center, target, range) {\n        center[X] = Math.floor(center[X]);\n        center[Y] = Math.floor(center[Y]);\n        var ax = Math.max(0, center[X] - range);\n        var bx = Math.min(grid.xSize - 1, (center[X] + range) + 1);\n        var ay = Math.max(0, center[Y] - range);\n        var by = Math.min(grid.ySize - 1, (center[Y] + range) + 1);\n        for (var x = ax; x <= bx; x++) {\n            for (var y = ay; y <= by; y++) {\n                var dx = x - center[X];\n                var dy = y - center[Y];\n                var r2 = dx * dx + dy * dy;\n                grid.setVal(x, y, \n                    interpolate(grid.getVal(x, y), target, \n                        FLUCTUATION_MAGNITUDE / (r2 + 1)\n                    )\n                );\n            }\n        }\n    }\n\n    update(increment) {\n        // addFrame(mouse);\n        this.addGridFrame(this.mainGrid);\n\n        // Run a number of Stochastic diffusion/flow iterations\n        for (var i = 0; i < SWAPS_PER_FRAME; i++) {\n            step(this.mainGrid, MAX_SWAP_RANGE, SWAP_FRACTION, this.vxGrid, this.vyGrid);\n        }\n\n        this.mainGrid.scale(DECAY_FACTOR);\n        this.vxGrid.scale(VECOCITY_DECAY_RATE);\n        this.vyGrid.scale(VECOCITY_DECAY_RATE);\n\n        if (this.timer % 2 == 0) {\n            var fx = randint(0, GRID_SIZE[X] - 1);\n            var fy = randint(0, GRID_SIZE[Y] - 1);\n\n            var vx = (Math.random() - 0.5) * 5;\n            var vy = (Math.random() - 0.5) * 5;\n            var size = Math.random() * 15;\n\n            var dx = (Math.random() - 0.5) * 5;\n            var dy = (Math.random() - 0.5) * 5;\n\n            //this.mainGrid[fy][fx] += 0.5 * Math.random();\n            this.pull(this.mainGrid, [fx, fy], size, FLUCTUATION_RADIUS);\n            this.pull(this.vxGrid, [fx, fy], -vx * VWEIGHT, FLUCTUATION_RADIUS);\n            this.pull(this.vyGrid, [fx, fy], -vy * VWEIGHT, FLUCTUATION_RADIUS);\n            \n            fx += dx * 2;\n            fy += dy * 2;\n            var f = clip([fx, fy]);\n            fx = f[X];\n            fy = f[Y];\n\n            //this.mainGrid[fy][fx] += 0.5 * Math.random();\n            this.pull(this.mainGrid, [fx, fy], -size, FLUCTUATION_RADIUS);\n            this.pull(this.vxGrid, [fx, fy], vx * VWEIGHT, FLUCTUATION_RADIUS);\n            this.pull(this.vyGrid, [fx, fy], vy * VWEIGHT, FLUCTUATION_RADIUS);\n        }\n        this.timer++;\n        return this;\n    }\n}\n\nexport default System;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}