{"ast":null,"code":"import { X, Y, GRID_SIZE, T, G0, G1, BASE, RAD } from './graphic-utils.js';\nimport { WHITE, THEME_GRAY_6B, interpolateColor } from '../../../utils/colors';\nimport { interpolateTrig } from '../../../utils/functions.js';\nfunction clip1d(a) {\n  return Math.min(Math.max(0, a), 0.9999);\n}\n\n// The colors here are on unit scale to make calculations easier in lieu of importing utils/colors.js\nfunction componentToHex(c) {\n  var hex = c.toString(16);\n  return hex.length == 1 ? \"0\" + hex : hex;\n}\nfunction drawCircle(canvas, c, radius, color) {\n  canvas.beginPath();\n  canvas.arc(c[X], c[Y], radius, 0, 2 * Math.PI);\n  canvas.fillStyle = color;\n  canvas.fill();\n}\nfunction project(x, y, z) {\n  var scale = 100;\n  return [(x + 1) * scale + 500, (y + 1) * scale + 300];\n}\nconst AtomGraphics = _ref => {\n  let {\n    atom\n  } = _ref;\n  atom.particles.sort((p1, p2) => p1.z > p2.z ? 1 : p1.z < p2.z ? -1 : 0);\n  function render(canvas) {\n    for (var i = 0; i < atom.particles.length; i++) {\n      var p = atom.particles[i];\n      console.log(Math.max(0, Math.min(1, (1 + p.z * 2) / 2)));\n      var color = interpolateColor(THEME_GRAY_6B, WHITE, Math.max(0, Math.min(1, (1 + p.z * 2) / 2.0)), interpolateTrig);\n      var point = project(p.x, p.y, p.z);\n      drawCircle(canvas, [point[0], point[1]], 3 + p.z / 2, color.getHex());\n    }\n  }\n  var canv = document.getElementById(\"fold-graphics\");\n  var ctx = canv != null ? canv.getContext('2d') : null;\n  if (ctx != null && atom != undefined) {\n    ctx.clearRect(G0[X], G0[Y], G1[X], G1[Y]);\n    render(ctx);\n  }\n};\n_c = AtomGraphics;\nexport default AtomGraphics;\nvar _c;\n$RefreshReg$(_c, \"AtomGraphics\");","map":{"version":3,"names":["X","Y","GRID_SIZE","T","G0","G1","BASE","RAD","WHITE","THEME_GRAY_6B","interpolateColor","interpolateTrig","clip1d","a","Math","min","max","componentToHex","c","hex","toString","length","drawCircle","canvas","radius","color","beginPath","arc","PI","fillStyle","fill","project","x","y","z","scale","AtomGraphics","atom","particles","sort","p1","p2","render","i","p","console","log","point","getHex","canv","document","getElementById","ctx","getContext","undefined","clearRect"],"sources":["/Users/joeyzhu/Projects/joey-j-zhu.github.io/src/components/fold/fold-graphics/atom-graphics.js"],"sourcesContent":["\nimport {X, Y, GRID_SIZE, T, G0, G1, BASE, RAD} from './graphic-utils.js';\nimport { WHITE, THEME_GRAY_6B, interpolateColor } from '../../../utils/colors';\nimport { interpolateTrig } from '../../../utils/functions.js';\n\nfunction clip1d(a) {\n    return Math.min(Math.max(0, a), 0.9999);\n}\n\n// The colors here are on unit scale to make calculations easier in lieu of importing utils/colors.js\nfunction componentToHex(c) {\n    var hex = c.toString(16);\n    return hex.length == 1 ? \"0\" + hex : hex;\n}\n\nfunction drawCircle(canvas, c, radius, color) {\n    canvas.beginPath();\n    canvas.arc(c[X], c[Y], radius, 0 , 2 * Math.PI);\n    canvas.fillStyle = color;\n    canvas.fill();\n}\n\nfunction project(x, y, z) {\n    var scale = 100;\n    return [(x + 1) * scale + 500, (y + 1) * scale + 300];\n}\n\nconst AtomGraphics = ({\n    atom,\n}) => {\n    atom.particles.sort((p1, p2) => p1.z > p2.z ? 1 : (p1.z < p2.z ? -1 : 0));\n    function render(canvas) {\n        for (var i = 0; i < atom.particles.length; i++) {\n            var p = atom.particles[i];\n            console.log(Math.max(0, Math.min(1, (1 + p.z * 2) / 2)));\n            var color = interpolateColor(THEME_GRAY_6B, WHITE, Math.max(0, Math.min(1, (1 + p.z * 2) / 2.0)), interpolateTrig);\n            var point = project(p.x, p.y, p.z);\n            drawCircle(canvas, [point[0], point[1]], 3 + p.z / 2, color.getHex());\n        }\n    }\n\n    var canv = document.getElementById(\"fold-graphics\");\n    var ctx = canv != null ? canv.getContext('2d') : null;\n\n    if (ctx != null && atom != undefined) {\n        ctx.clearRect(G0[X], G0[Y], G1[X], G1[Y]);\n        render(ctx);\n    }\n};\n\nexport default AtomGraphics;\n\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}