{"ast":null,"code":"var _jsxFileName = \"/Users/joeyzhu/Projects/joey-j-zhu.github.io/src/components/hobbies/hobby-display.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { interpolateTrig } from \"../../utils/functions\";\nimport { Color, interpolateColor } from \"../../utils/colors\";\nimport { default as HobbySlideshow } from \"./hobby-slideshow\";\nimport { default as HobbyStatement } from \"./hobby-statement\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst HobbyDisplay = _ref => {\n  _s();\n  let {\n    selectedIndex,\n    contents\n  } = _ref;\n  // Idle loop to update transition states\n  const [renderOffset, setRenderOffset] = useState(0);\n  const [renderIndex, setRenderIndex] = useState(0);\n  const [scrollMode, setScrollMode] = useState(0);\n  const [scrollDirection, setScrollDirection] = useState(1);\n  const scrollIncrement = 0.05;\n  useEffect(() => {\n    const interval = setInterval(() => {\n      if (renderOffset <= 0) {\n        if (scrollMode == -1) {\n          setRenderOffset(1);\n          setScrollMode(1);\n          setRenderIndex(selectedIndex);\n        } else {\n          setRenderOffset(0);\n        }\n      } else {\n        setRenderOffset(renderOffset - scrollIncrement);\n      }\n    }, 10);\n    return () => clearInterval(interval);\n  });\n  useEffect(() => {\n    setRenderOffset(1);\n    setScrollMode(-1);\n    setScrollDirection(selectedIndex > renderIndex ? 1 : -1);\n  }, [selectedIndex]);\n  var xOffset = 0;\n  if (scrollMode == -1) {\n    xOffset = (1 - interpolateTrig(0, 1, renderOffset)) * 1000 * scrollDirection;\n  } else if (scrollMode == 1) {\n    xOffset = interpolateTrig(0, 1, renderOffset) * -1000 * scrollDirection;\n  }\n  if (contents != undefined) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          position: \"relative\",\n          left: xOffset,\n          opacity: scrollMode == -1 ? renderOffset : 1 - renderOffset\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            float: \"left\"\n          },\n          children: /*#__PURE__*/_jsxDEV(HobbyStatement, {\n            description: contents[renderIndex].description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(HobbySlideshow, {\n          imageLinks: contents[renderIndex],\n          renderParams: {\n            renderOffset: renderOffset,\n            scrollMode: scrollMode\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: renderIndex\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }, this);\n  }\n};\n_s(HobbyDisplay, \"AdWREqdXlM798f9oFlY7FlIbfQk=\");\n_c = HobbyDisplay;\nexport default HobbyDisplay;\nvar _c;\n$RefreshReg$(_c, \"HobbyDisplay\");","map":{"version":3,"names":["React","useState","useEffect","interpolateTrig","Color","interpolateColor","default","HobbySlideshow","HobbyStatement","HobbyDisplay","selectedIndex","contents","renderOffset","setRenderOffset","renderIndex","setRenderIndex","scrollMode","setScrollMode","scrollDirection","setScrollDirection","scrollIncrement","interval","setInterval","clearInterval","xOffset","undefined","position","left","opacity","float","description"],"sources":["/Users/joeyzhu/Projects/joey-j-zhu.github.io/src/components/hobbies/hobby-display.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { interpolateTrig } from \"../../utils/functions\";\nimport { Color, interpolateColor, } from \"../../utils/colors\";\n\nimport { default as HobbySlideshow } from \"./hobby-slideshow\";\nimport { default as HobbyStatement } from \"./hobby-statement\";\n\n\nconst HobbyDisplay = ({\n    selectedIndex,\n    contents,\n}) => {\n\n    // Idle loop to update transition states\n    const [renderOffset, setRenderOffset] = useState(0);\n    const [renderIndex, setRenderIndex] = useState(0);\n    const [scrollMode, setScrollMode] = useState(0);\n    const [scrollDirection, setScrollDirection] = useState(1);\n    const scrollIncrement = 0.05;\n\n    useEffect(() => {\n        const interval = setInterval(() => {\n            if (renderOffset <= 0) {\n                if (scrollMode == -1) {\n                    setRenderOffset(1);\n                    setScrollMode(1);\n                    setRenderIndex(selectedIndex);\n                } else {\n                    setRenderOffset(0);\n                }\n            } else {\n                setRenderOffset(renderOffset - scrollIncrement);\n            }\n        }, 10);\n        return () => clearInterval(interval);\n    });\n\n    useEffect(() => {\n        setRenderOffset(1);\n        setScrollMode(-1);\n        setScrollDirection(selectedIndex > renderIndex ? 1 : -1)\n    }, [selectedIndex]);\n    \n    var xOffset = 0;\n    if (scrollMode == -1) {\n        xOffset = (1 - interpolateTrig(0, 1, renderOffset)) * 1000 * scrollDirection;\n    } else if (scrollMode == 1) {\n        xOffset = interpolateTrig(0, 1, renderOffset) * -1000 * scrollDirection;\n    }\n\n    if (contents != undefined) {\n        return (\n            <div>\n                <div style={{\n                position: \"relative\", \n                left: xOffset, \n                opacity:(scrollMode == -1 ? renderOffset : 1 - renderOffset)}}>\n                    <div style={{\n                        float: \"left\",\n                    }}\n                    >\n                    <HobbyStatement \n                        description={contents[renderIndex].description} />\n                    </div>\n                \n                    <HobbySlideshow \n                    imageLinks={contents[renderIndex]}\n                    renderParams={{renderOffset: renderOffset, scrollMode: scrollMode}}/>\n                </div>\n            </div>\n            \n        );\n    } else {\n        return (\n            <div>{renderIndex}</div>\n        );\n    }\n    \n}\n\nexport default HobbyDisplay;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}