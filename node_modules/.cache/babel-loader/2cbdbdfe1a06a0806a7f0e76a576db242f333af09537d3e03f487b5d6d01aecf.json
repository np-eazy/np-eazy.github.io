{"ast":null,"code":"var _jsxFileName = \"/Users/joeyzhu/Projects/joey-j-zhu.github.io/src/components/hobbies/hobby-button.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport '../../index.css';\nimport { interpolateColor, themeTransientCycle, THEME_GRAY_4B, THEME_GRAY_4H, THEME_GRAY_6B, THEME_GRAY_6H, THEME_GREEN, WHITE } from '../../utils/colors';\nimport { interpolateTrig } from '../../utils/functions';\nimport { parseJsonProps, getComponentById, registerComponent } from '../../utils/mapping';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst HobbyButton = _ref => {\n  _s();\n  let {\n    label,\n    selectedIndex,\n    // State\n    selectIndex,\n    // Function\n    thisIndex\n  } = _ref;\n  // Idle loop to update transition states\n  const [isHovering, setIsHovering] = useState(false);\n  const [hoverParam, setHoverParam] = useState(0);\n  const [transient, setTransient] = useState(0);\n  const [isSelected, setIsSelected] = useState(false);\n  const incrementSize = 0.05;\n  useEffect(() => {\n    const interval = setInterval(() => {\n      setTransient(transient > 0 ? transient - incrementSize : 0);\n      setHoverParam(isHovering ? hoverParam < 1 ? hoverParam + incrementSize : 1 : hoverParam > 0 ? hoverParam - incrementSize : 0);\n    }, 10);\n    return () => clearInterval(interval);\n  }, [transient, setTransient, isSelected, hoverParam, isHovering]);\n  useEffect(() => {\n    setIsSelected(thisIndex == selectedIndex);\n  }, [selectedIndex]);\n  const select = () => {\n    setTransient(1);\n    selectIndex(thisIndex);\n  };\n  const renderColor = interpolateColor(isSelected ? THEME_GREEN : THEME_GRAY_6H, isSelected ? THEME_GREEN : THEME_GRAY_6H, hoverParam, interpolateTrig);\n  const colorHex = transient > 0 ? themeTransientCycle(WHITE, renderColor, 1 - transient, interpolateTrig).getHex() : renderColor.getHex();\n  const renderBorderColor = interpolateColor(isSelected ? THEME_GREEN : THEME_GRAY_6B, isSelected ? THEME_GREEN : THEME_GRAY_6H, hoverParam, interpolateTrig);\n  const borderColorHex = isSelected ? themeTransientCycle(WHITE, renderBorderColor, 1 - transient, interpolateTrig).getHex() : renderBorderColor.getHex();\n  // Rendering\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"hobby-button\",\n    onClick: () => select(),\n    onMouseEnter: () => setIsHovering(true),\n    onMouseLeave: () => setIsHovering(false),\n    style: {\n      color: colorHex,\n      border: \"1px solid \" + borderColorHex,\n      backgroundColor: THEME_GRAY_6B.getHex()\n    },\n    children: label\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 9\n  }, this);\n};\n_s(HobbyButton, \"ggoxY2c8Fp6mOrSq5tO1mZvJHng=\");\n_c = HobbyButton;\nexport default HobbyButton;\nvar _c;\n$RefreshReg$(_c, \"HobbyButton\");","map":{"version":3,"names":["React","useEffect","useState","interpolateColor","themeTransientCycle","THEME_GRAY_4B","THEME_GRAY_4H","THEME_GRAY_6B","THEME_GRAY_6H","THEME_GREEN","WHITE","interpolateTrig","parseJsonProps","getComponentById","registerComponent","HobbyButton","label","selectedIndex","selectIndex","thisIndex","isHovering","setIsHovering","hoverParam","setHoverParam","transient","setTransient","isSelected","setIsSelected","incrementSize","interval","setInterval","clearInterval","select","renderColor","colorHex","getHex","renderBorderColor","borderColorHex","color","border","backgroundColor"],"sources":["/Users/joeyzhu/Projects/joey-j-zhu.github.io/src/components/hobbies/hobby-button.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport '../../index.css';\nimport { interpolateColor, themeTransientCycle, THEME_GRAY_4B, THEME_GRAY_4H, THEME_GRAY_6B, THEME_GRAY_6H, THEME_GREEN, WHITE } from '../../utils/colors';\nimport { interpolateTrig } from '../../utils/functions';\n\nimport { parseJsonProps, getComponentById, registerComponent } from '../../utils/mapping';\n\nconst HobbyButton = ({\n    label,\n    selectedIndex, // State\n    selectIndex,   // Function\n    thisIndex,\n}) => {\n    // Idle loop to update transition states\n    const [isHovering, setIsHovering] = useState(false);\n    const [hoverParam, setHoverParam] = useState(0);\n    const [transient, setTransient] = useState(0);\n    const [isSelected, setIsSelected] = useState(false);\n    const incrementSize = 0.05;\n    useEffect(() => {\n        const interval = setInterval(() => {\n            setTransient(transient > 0 ? transient - incrementSize : 0);\n            setHoverParam(isHovering ? (hoverParam < 1 ? hoverParam + incrementSize : 1) \n                : (hoverParam > 0 ? hoverParam - incrementSize : 0));\n        }, 10);\n        return () => clearInterval(interval);\n      }, [transient, setTransient, isSelected, hoverParam, isHovering]);\n\n    useEffect(() => {\n        setIsSelected(thisIndex == selectedIndex);\n\n    }, [selectedIndex]);\n\n    const select = () => {\n        setTransient(1);\n        selectIndex(thisIndex);\n    };\n\n    const renderColor = interpolateColor(isSelected ? THEME_GREEN : THEME_GRAY_6H, isSelected ? THEME_GREEN : THEME_GRAY_6H, hoverParam, interpolateTrig);\n    const colorHex = transient > 0 ?\n        themeTransientCycle(WHITE, renderColor, 1 - transient, interpolateTrig).getHex()\n        :\n        renderColor.getHex();\n\n    const renderBorderColor = interpolateColor(isSelected ? THEME_GREEN : THEME_GRAY_6B, isSelected ? THEME_GREEN : THEME_GRAY_6H, hoverParam, interpolateTrig);\n    const borderColorHex = isSelected ?\n        themeTransientCycle(WHITE, renderBorderColor, 1 - transient, interpolateTrig).getHex()\n        :\n        renderBorderColor.getHex();\n    // Rendering\n    return (\n        <div className=\"hobby-button\" \n        onClick={() => select()} \n        onMouseEnter={() => setIsHovering(true)}\n        onMouseLeave={() => setIsHovering(false)}\n        style={{\n            color: colorHex,\n            border: \"1px solid \" + borderColorHex,\n            backgroundColor: THEME_GRAY_6B.getHex(),\n\n        }}>\n            {label}\n        </div>\n    );\n}\n\nexport default HobbyButton;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}