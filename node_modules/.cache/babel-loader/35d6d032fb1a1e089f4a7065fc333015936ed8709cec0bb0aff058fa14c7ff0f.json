{"ast":null,"code":"import { X, Y, G0, G1 } from './graphic-utils.js';\nimport { WHITE, THEME_GRAY_6B, interpolateColor } from '../../../utils/colors';\nimport { interpolateTrig } from '../../../utils/functions.js';\n\n// The colors here are on unit scale to make calculations easier in lieu of importing utils/colors.js\nfunction componentToHex(c) {\n  var hex = c.toString(16);\n  return hex.length == 1 ? \"0\" + hex : hex;\n}\nfunction drawCircle(canvas, c, radius, color) {\n  canvas.beginPath();\n  canvas.arc(c[X], c[Y], radius, 0, 2 * Math.PI);\n  canvas.fillStyle = color;\n  canvas.fill();\n}\nfunction project(x, y, z, t) {\n  var newX = x * Math.cos(t) + y * Math.sin(t);\n  var newY = x * -Math.sin(t) + y * Math.cos(t);\n  var parallax = 0.5;\n  var scale = 100;\n  return [(x + 1) * scale + 500, (y + 1) * scale + 300];\n}\nconst AtomGraphics = _ref => {\n  let {\n    atom\n  } = _ref;\n  atom.particles.sort((p1, p2) => p1.z > p2.z ? 1 : p1.z < p2.z ? -1 : 0);\n  function render(canvas) {\n    for (var i = 0; i < atom.particles.length; i++) {\n      var p = atom.particles[i];\n      var color = interpolateColor(THEME_GRAY_6B, WHITE, Math.max(0, Math.min(1, (1 + p.z * 2) / 2.0)), interpolateTrig);\n      var point = project(p.x, p.y, p.z);\n      drawCircle(canvas, [point[0], point[1]], Math.max(0, Math.min(2, (1 + p.z * 2) / 2.0)), color.getHex());\n    }\n  }\n  var canv = document.getElementById(\"fold-graphics\");\n  var ctx = canv != null ? canv.getContext('2d') : null;\n  if (ctx != null && atom != undefined) {\n    ctx.clearRect(G0[X], G0[Y], G1[X], G1[Y]);\n    render(ctx);\n  }\n};\n_c = AtomGraphics;\nexport default AtomGraphics;\nvar _c;\n$RefreshReg$(_c, \"AtomGraphics\");","map":{"version":3,"names":["X","Y","G0","G1","WHITE","THEME_GRAY_6B","interpolateColor","interpolateTrig","componentToHex","c","hex","toString","length","drawCircle","canvas","radius","color","beginPath","arc","Math","PI","fillStyle","fill","project","x","y","z","t","newX","cos","sin","newY","parallax","scale","AtomGraphics","atom","particles","sort","p1","p2","render","i","p","max","min","point","getHex","canv","document","getElementById","ctx","getContext","undefined","clearRect"],"sources":["/Users/joeyzhu/Projects/joey-j-zhu.github.io/src/components/fold/fold-graphics/atom-graphics.js"],"sourcesContent":["\nimport {X, Y, G0, G1 } from './graphic-utils.js';\nimport { WHITE, THEME_GRAY_6B, interpolateColor } from '../../../utils/colors';\nimport { interpolateTrig } from '../../../utils/functions.js';\n\n// The colors here are on unit scale to make calculations easier in lieu of importing utils/colors.js\nfunction componentToHex(c) {\n    var hex = c.toString(16);\n    return hex.length == 1 ? \"0\" + hex : hex;\n}\n\nfunction drawCircle(canvas, c, radius, color) {\n    canvas.beginPath();\n    canvas.arc(c[X], c[Y], radius, 0 , 2 * Math.PI);\n    canvas.fillStyle = color;\n    canvas.fill();\n}\n\nfunction project(x, y, z, t) {\n    var newX = x * Math.cos(t) + y * Math.sin(t);\n    var newY = x * -Math.sin(t) + y * Math.cos(t);\n    var parallax = 0.5;\n\n    \n\n    var scale = 100;\n    return [(x + 1) * scale + 500, (y + 1) * scale + 300];\n}\n\nconst AtomGraphics = ({\n    atom,\n}) => {\n    atom.particles.sort((p1, p2) => p1.z > p2.z ? 1 : (p1.z < p2.z ? -1 : 0));\n    function render(canvas) {\n        for (var i = 0; i < atom.particles.length; i++) {\n            var p = atom.particles[i];\n            var color = interpolateColor(THEME_GRAY_6B, WHITE, Math.max(0, Math.min(1, (1 + p.z * 2) / 2.0)), interpolateTrig);\n            var point = project(p.x, p.y, p.z);\n            drawCircle(canvas, [point[0], point[1]], Math.max(0, Math.min(2, (1 + p.z * 2) / 2.0)), color.getHex());\n        }\n    }\n\n    var canv = document.getElementById(\"fold-graphics\");\n    var ctx = canv != null ? canv.getContext('2d') : null;\n\n    if (ctx != null && atom != undefined) {\n        ctx.clearRect(G0[X], G0[Y], G1[X], G1[Y]);\n        render(ctx);\n    }\n};\n\nexport default AtomGraphics;\n\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}