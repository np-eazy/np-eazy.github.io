{"ast":null,"code":"import { complex, sqrt, exp, atan, acos, pow, multiply } from 'mathjs';\nconst A0 = 1;\nexport function interpolateTrig(a, b, t) {\n  let tsin = 1 - Math.cos(Math.PI * t / 2.0);\n  return a + tsin * (b - a);\n}\nexport function interpolate(a, b, fraction) {\n  return a + fraction * (b - a);\n}\nexport function randint(a, b) {\n  return a + Math.floor(Math.random() * (b - a));\n}\nexport function randRange(a, b) {\n  return a + Math.random() * (b - a);\n}\n\n// Flip a coin weighted p for True\nexport function coinFlip(p) {\n  return Math.random() < p;\n}\nexport function stoc(n) {\n  var fn = Math.floor(n);\n  var d = coinFlip(n - fn);\n  if (d == true) {\n    return fn + 1;\n  } else {\n    return fn;\n  }\n}\nvar runningFactorial = [];\nvar factorial = 1;\nfor (var i = 0; i < 10; i++) {\n  factorial *= i + 1;\n  runningFactorial.push(factorial);\n}\nexport function getFactorial(n) {\n  if (n <= 0) {\n    return 1;\n  } else if (n > 10) {\n    return runningFactorial[n - 1];\n  } else {\n    var soln = 1;\n    for (var i = 0; i < n; i++) {\n      soln *= i + 1;\n    }\n    return soln;\n  }\n}\nexport function getDoubleFactorial(n) {\n  if (n <= 0) {\n    return 1;\n  } else {\n    var soln = 1;\n    for (var i = 0; i < n; i++) {\n      if (i + 1 % 2 == n % 2) {\n        soln *= i + 1;\n      }\n    }\n    return soln;\n  }\n}\nexport function choose(n, k) {\n  return getFactorial(n) / (getFactorial(n - k) * getFactorial(k));\n}\nexport function mapToSpherical(x, y, z) {\n  var rho = sqrt(x * x + y * y + z * z);\n  var theta = atan(y / x);\n  var phi = acos(z / rho);\n  return [rho, theta, phi];\n}\nexport function getNormalization(n, l) {\n  var constTerm = sqrt(pow(2 / (n * A0), 3) * getFactorial(n - l - 1) / (2 * n * getFactorial(n + l)));\n  var radius = rho => 2 * rho / (n * A0);\n  return rho => constTerm * exp(radius(rho) / -2) * pow(radius(rho), l);\n}\nexport function getLaguerrePolynomial(n, l) {\n  var kl = 2 * l + 1;\n  var nl = n - l - 1;\n  return rho => {\n    var signedPower = 1;\n    var total = 0;\n    for (var i = 0; i <= n; i++) {\n      total += signedPower * getFactorial(nl + kl) / (getFactorial(nl - i) * getFactorial(kl + i) * getFactorial(i));\n      signedPower *= -rho;\n    }\n    var constTerm = sqrt(pow(2 / (n * A0), 3) * getFactorial(n - l - 1) / (2 * n * getFactorial(n + l)));\n    var radius = 2 * rho / (n * A0);\n    return total * constTerm * exp(radius / -2) * pow(radius, l);\n  };\n}\nexport function getLegendrePolynomial(l, m) {\n  var sign = m % 2 == 0 ? 1 : -1;\n  return rho => {\n    var base = sign * getDoubleFactorial(2 * m - 1) * pow(1 - rho * rho, m / 2);\n    var nextBase = (2 * m + 1) * rho * base;\n    if (l - m == 0) {\n      return base;\n    } else if (l - m == 1) {\n      return nextBase;\n    } else if (l - m >= 2) {\n      var temp = m;\n      for (var i = 0; i < l - m - 1; i++) {\n        var nextPolynomial = ((2 * l + 1) * nextBase - (l + m) * base) / (l - m + 1);\n        base = nextBase;\n        nextBase = nextPolynomial;\n      }\n      return nextPolynomial;\n    }\n  };\n}\nexport function getSphericalHarmonic(l, m) {\n  var sign = complex(m % 2 == 0 ? 1 : -1, 0);\n  var normalization = complex(sqrt(getFactorial(l - m) * (2 * l + 1) / (getFactorial(l + m) * 4 * Math.PI)), 0);\n  var complexTerm = phi => exp(complex(0, m * phi));\n  return phi => multiply(sign, normalization, complexTerm(phi));\n}","map":{"version":3,"names":["complex","sqrt","exp","atan","acos","pow","multiply","A0","interpolateTrig","a","b","t","tsin","Math","cos","PI","interpolate","fraction","randint","floor","random","randRange","coinFlip","p","stoc","n","fn","d","runningFactorial","factorial","i","push","getFactorial","soln","getDoubleFactorial","choose","k","mapToSpherical","x","y","z","rho","theta","phi","getNormalization","l","constTerm","radius","getLaguerrePolynomial","kl","nl","signedPower","total","getLegendrePolynomial","m","sign","base","nextBase","temp","nextPolynomial","getSphericalHarmonic","normalization","complexTerm"],"sources":["/Users/joeyzhu/Projects/joey-j-zhu.github.io/src/utils/functions.js"],"sourcesContent":["import { complex, sqrt, exp, atan, acos, pow, multiply } from 'mathjs';\n\nconst A0 = 1;\n\nexport function interpolateTrig(a, b, t) {\n    let tsin = 1 - Math.cos(Math.PI * t / 2.0);\n    return a + tsin * (b - a);\n}\n\nexport function interpolate(a, b, fraction) {\n    return a + fraction * (b - a);\n}\n\nexport function randint(a, b) {\n    return (a + Math.floor(Math.random() * (b - a)));\n}\n\nexport function randRange(a, b) {\n    return (a + Math.random() * (b - a));\n}\n\n// Flip a coin weighted p for True\nexport function coinFlip(p) {\n    return (Math.random() < p);\n}\n\nexport function stoc(n) {\n    var fn = Math.floor(n);\n    var d = coinFlip(n - fn);\n    if (d == true) {\n        return fn + 1;\n    } else {\n        return fn;\n    }\n}\n\nvar runningFactorial = [];\nvar factorial = 1;\nfor (var i = 0; i < 10; i++) {\n    factorial *= i + 1;\n    runningFactorial.push(factorial);\n}\n\nexport function getFactorial(n) {\n    if (n <= 0) {\n        return 1;\n    } else if (n > 10) {\n        return runningFactorial[n - 1];\n    } else {\n        var soln = 1;\n        for (var i = 0; i < n; i++) {\n            soln *= i + 1;\n        }\n        return soln;\n    }\n}\n\nexport function getDoubleFactorial(n) {\n    if (n <= 0) {\n        return 1;\n    } else {\n        var soln = 1;\n        for (var i = 0; i < n; i++) {\n            if (i + 1 % 2 == n % 2) {\n                soln *= i + 1;\n            }\n        }\n        return soln;\n    }\n}\n\nexport function choose(n, k) {\n    return getFactorial(n) / (getFactorial(n - k) * getFactorial(k));\n}\n\nexport function mapToSpherical(x, y, z) {\n    var rho = sqrt(x * x + y * y + z * z);\n    var theta = atan(y / x);\n    var phi = acos(z / rho);\n    return [rho, theta, phi];\n}\n\nexport function getNormalization(n, l) {\n    var constTerm = sqrt(pow(2 / (n * A0), 3) * getFactorial(n - l - 1) / (2 * n * getFactorial(n + l)));\n    var radius = (rho) => (2 * rho) / (n * A0);\n    return (rho) => constTerm * exp(radius(rho) / -2) * pow(radius(rho), l);\n}\n\n\nexport function getLaguerrePolynomial(n, l) {\n    var kl = 2 * l + 1;\n    var nl = n - l - 1;\n\n    return (rho) => {\n        var signedPower = 1;\n        var total = 0;\n        for (var i = 0; i <= n; i++) {\n            total += signedPower * getFactorial(nl + kl) / (getFactorial(nl - i) * getFactorial(kl + i) * getFactorial(i));\n            signedPower *= -rho;\n        }\n        var constTerm = sqrt(pow(2 / (n * A0), 3) * getFactorial(n - l - 1) / (2 * n * getFactorial(n + l)));\n        var radius = (2 * rho) / (n * A0);\n        return total * constTerm * exp(radius / -2) * pow(radius, l);\n    }\n}\n\nexport function getLegendrePolynomial(l, m) {\n    var sign = m % 2 == 0 ? 1 : -1;\n    return (rho) => {\n        var base = sign * getDoubleFactorial(2 * m - 1) * pow(1 - rho * rho, m / 2);\n        var nextBase = (2 * m + 1) * rho * base;\n        if (l - m == 0) {\n            return base;\n        } else if (l - m == 1) {\n            return nextBase;\n        } else if (l - m >= 2) {\n            var temp = m;\n            for (var i = 0; i < l - m - 1; i++) {\n                var nextPolynomial = ((2 * l + 1) * nextBase - (l + m) * base) / (l - m + 1);\n                base = nextBase;\n                nextBase = nextPolynomial;\n            }\n            return nextPolynomial;\n        }\n    }\n}\n\nexport function getSphericalHarmonic(l, m) {\n    var sign = complex(m % 2 == 0 ? 1 : -1, 0);\n    var normalization = complex(sqrt((getFactorial(l - m) * (2 * l + 1)) / (getFactorial(l + m) * 4 * Math.PI)), 0);\n    var complexTerm = (phi) => exp(complex(0, m * phi));\n\n    return (phi) => multiply(sign, normalization, complexTerm(phi));\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}