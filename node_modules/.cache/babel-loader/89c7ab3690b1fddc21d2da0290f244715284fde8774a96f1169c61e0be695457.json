{"ast":null,"code":"import { coinFlip, interpolateTrig, randRange } from '../../../utils/functions';\nimport { complex, sqrt, exp, sin, cos, add, subtract, multiply, divide, asin } from 'mathjs';\nimport { atan, acos, pow } from 'mathjs';\nimport { interpolateColor, themeTransientCycle, WHITE } from '../../../utils/colors';\nconst A0 = 0.25;\nconst factorials = [];\nvar total = 1;\nfor (var i = 0; i < 10; i++) {\n  total *= i + 1;\n  factorials.push(total);\n}\nexport function getFactorial(n) {\n  if (n <= 0) {\n    return 1;\n  } else if (n <= 10) {\n    return factorials[n - 1];\n  } else {\n    var soln = 1;\n    for (var i = 0; i < n; i++) {\n      soln *= i + 1;\n    }\n    return soln;\n  }\n}\n;\nexport function getDoubleFactorial(n) {\n  if (n <= 0) {\n    return 1;\n  } else {\n    var soln = 1;\n    for (var i = 0; i < n; i++) {\n      if (i + 1 % 2 == n % 2) {\n        soln *= i + 1;\n      }\n    }\n    return soln;\n  }\n}\n;\nexport function choose(n, k) {\n  return getFactorial(n) / (getFactorial(n - k) * getFactorial(k));\n}\n;\nexport function mapToSpherical(x, y, z) {\n  var rho = sqrt(x * x + y * y + z * z);\n  var theta = atan(y / x);\n  var phi = acos(z / rho);\n  return [rho, theta, phi];\n}\nexport function getLaguerrePolynomial(n, l) {\n  return rho => {\n    var kl = 2 * l + 1;\n    var nl = n - l - 1;\n    var signedPower = 1;\n    var total = 0;\n    for (var i = 0; i <= n; i++) {\n      total += signedPower * getFactorial(nl) * choose(kl + nl, nl - i) / getFactorial(i);\n      signedPower *= -rho;\n    }\n    var constTerm = sqrt(pow(2 / (n * A0), 3) * getFactorial(n - l - 1) / (2 * n * getFactorial(n + l)));\n    var radius = 2 * rho / (n * A0);\n    return total * constTerm * exp(radius / -2) * pow(radius, l);\n  };\n}\n;\nexport function getLegendrePolynomial(l, m) {\n  return rho => {\n    var sign = m % 2 == 0 ? 1 : -1;\n    var base = sign * getDoubleFactorial(2 * m - 1) * pow(1 - rho * rho, l / 2);\n    var nextBase = (2 * m + 1) * rho * base;\n    if (l - m == 0) {\n      return base;\n    } else if (l - m == 1) {\n      return nextBase;\n    } else if (l - m >= 2) {\n      for (var i = 0; i < l - m - 1; i++) {\n        var nextPolynomial = ((2 * l + 1) * nextBase - (l + m) * base) / (l - m + 1);\n        base = nextBase;\n        nextBase = nextPolynomial;\n      }\n      return nextPolynomial;\n    }\n  };\n  //return (rho) => rho;\n}\n;\nexport function getSphericalHarmonic(l, m) {\n  return phi => {\n    var sign = m % 2 == 0 ? 1 : -1;\n    var normalization = complex(sqrt(getFactorial(l - m) * (2 * l + 1) / (getFactorial(l + m) * 4 * Math.PI)), 0);\n    return multiply(sign, normalization, exp(complex(0, m * phi)));\n  };\n}\n;\nfunction getFunctional(n, l, m) {\n  return (x, y, z) => {\n    var sphericals = mapToSpherical(x, y, z);\n    var rho = sphericals[0];\n    var theta = sphericals[1];\n    var phi = sphericals[2];\n    return multiply(getLaguerrePolynomial(n, l)(rho), getLegendrePolynomial(l, m)(cos(theta)), getSphericalHarmonic(l, m)(phi));\n  };\n}\nfunction getGradient(n, l, m, timer) {\n  return (x, y, z) => {\n    var delta = 0.00000001;\n    var sphericals = mapToSpherical(x, y, z);\n    var rho = sphericals[0];\n    var theta = sphericals[1];\n    var phi = sphericals[2];\n    var frho = getLaguerrePolynomial(n, l)(rho + delta / 2);\n    var ftheta = getLegendrePolynomial(l, m)(cos(theta) + delta / 2);\n    var fphi = getSphericalHarmonic(l, m)(phi + delta / 2);\n    var deltaRho = divide(subtract(frho, getLaguerrePolynomial(n, l)(rho - delta / 2)), delta);\n    var deltaTheta = divide(subtract(ftheta, getLegendrePolynomial(l, m)(cos(theta) - delta / 2)), delta * rho);\n    var deltaPhi = divide(subtract(fphi, getSphericalHarmonic(l, m)(phi - delta / 2)), delta * rho * Math.sin(theta));\n    deltaRho = multiply(deltaRho, ftheta, fphi);\n    deltaTheta = multiply(deltaTheta, frho, fphi);\n    deltaPhi = multiply(deltaPhi, frho, ftheta);\n    var unitRho = [sin(theta) * cos(phi), sin(theta) * sin(phi), cos(theta)];\n    var unitTheta = [cos(theta) * cos(phi), cos(theta) * sin(phi), sin(theta) * -1];\n    var unitPhi = [sin(phi), cos(phi) * -1, 0.0];\n    return [add(multiply(unitRho[0], deltaRho), multiply(unitTheta[0], deltaTheta), multiply(unitPhi[0], deltaPhi)), add(multiply(unitRho[1], deltaRho), multiply(unitTheta[1], deltaTheta), multiply(unitPhi[1], deltaPhi)), add(multiply(unitRho[2], deltaRho), multiply(unitTheta[2], deltaTheta), multiply(unitPhi[2], deltaPhi))];\n  };\n}\nfunction getEnergyLevel(n) {\n  return 5 / (n * n);\n}\nclass Particle {\n  constructor(x, y, z) {\n    this.x = x;\n    this.y = y;\n    this.z = z;\n    this.color = WHITE;\n    this.buffer = [];\n  }\n  move(dx, dy, dz, addToPlayback) {\n    if (addToPlayback) {\n      this.buffer.push({\n        x: this.x,\n        y: this.y,\n        z: this.z,\n        color: themeTransientCycle(WHITE, WHITE, (1 + Math.sin(Math.atan(this.y / this.x) / 2)) / 2, interpolateTrig)\n      });\n    }\n    this.x += dx;\n    this.y += dy;\n    this.z += dz;\n  }\n  playback(history) {\n    this.set(this.buffer[history].x, this.buffer[history].y, this.buffer[history].z);\n    this.setColor(this.buffer[history].color);\n  }\n  set(dx, dy, dz) {\n    this.x = dx;\n    this.y = dy;\n    this.z = dz;\n  }\n  setColor(color) {\n    this.color = color;\n  }\n}\nconst Atom = class {\n  constructor(props) {\n    this.superposition = props.superposition;\n    this.particleCount = props.particleCount;\n    this.boxSize = props.boxSize;\n    this.timer = 0;\n    this.playbackTimer = -500;\n    this.particles = [];\n    while (this.particles.length < props.particleCount) {\n      var theta = randRange(0, Math.PI * 2);\n      var phi = asin(randRange(-1, 1));\n      var radius = 1 / randRange(0.5, 2);\n      var newParticle = new Particle(radius * cos(theta) * cos(phi), radius * cos(theta) * sin(phi), radius * sin(theta));\n      if (coinFlip(100000 * this.getProbabilityDistribution(newParticle.x, newParticle.y, newParticle.z, 0))) {\n        this.particles.push(newParticle);\n      }\n    }\n  }\n  getWavefunction(x, y, z, t) {\n    var total = 0;\n    for (var i = 0; i < this.superposition.length; i++) {\n      var phase = exp(complex(0, getEnergyLevel(this.superposition[i].n) * t));\n      total = add(total, multiply(phase, this.superposition[i].weight, getFunctional(this.superposition[i].n, this.superposition[i].l, this.superposition[i].m)(x, y, z)));\n    }\n    return total;\n  }\n  getProbabilityDistribution(x, y, z, t) {\n    var wavefunction = this.getWavefunction(x, y, z, t);\n    var wavefunctionC = wavefunction.conjugate();\n    return multiply(wavefunction, wavefunctionC);\n  }\n  getWavefunctionGradient(x, y, z, t) {\n    var total = [complex(0, 0), complex(0, 0), complex(0, 0)];\n    for (var i = 0; i < this.superposition.length; i++) {\n      var phase = exp(complex(0, getEnergyLevel(this.superposition[i].n) * t));\n      var grad = getGradient(this.superposition[i].n, this.superposition[i].l, this.superposition[i].m, this.timer)(x, y, z, t);\n      total[0] = add(total[0], multiply(phase, this.superposition[i].weight, grad[0]));\n      total[1] = add(total[1], multiply(phase, this.superposition[i].weight, grad[1]));\n      total[2] = add(total[2], multiply(phase, this.superposition[i].weight, grad[2]));\n    }\n    return total;\n  }\n  getVelocity(x, y, z, t) {\n    var wavefunction = 1;\n    var wavefunctionC = 1;\n    var gradient = this.getWavefunctionGradient(x, y, z, t);\n    var gradientC = [gradient[0].conjugate(), gradient[1].conjugate(), gradient[2].conjugate()];\n    var velocity = [divide(subtract(multiply(wavefunctionC, gradient[0]), multiply(wavefunction, gradientC[0])), add(1e-8, multiply(wavefunction, wavefunctionC))), divide(subtract(multiply(wavefunctionC, gradient[1]), multiply(wavefunction, gradientC[1])), add(1e-8, multiply(wavefunction, wavefunctionC))), divide(subtract(multiply(wavefunctionC, gradient[2]), multiply(wavefunction, gradientC[2])), add(1e-8, multiply(wavefunction, wavefunctionC)))];\n    var t = 1 - sin(atan(velocity[2] / velocity[1]) / 2) / 2;\n    return velocity;\n  }\n  update(increment) {\n    var deltat = 0.025;\n    if (this.playbackTimer < 0) {\n      for (var i = 0; i < this.particles.length; i++) {\n        var p = this.particles[i];\n        var oldNorm = Math.sqrt(p.x * p.x + p.y * p.y + p.z * p.z);\n        for (var j = 0; j < 5; j++) {\n          var velocity = this.getVelocity(p.x, p.y, p.z, this.timer);\n          p.move(velocity[0].im * deltat, velocity[1].im * deltat, velocity[2].im * deltat, false);\n        }\n        var newNorm = Math.sqrt(p.x * p.x + p.y * p.y + p.z * p.z);\n        var factor = (oldNorm - newNorm) / newNorm * 0.05;\n        p.move(p.x * factor, p.y * factor, p.z * factor, true);\n      }\n    } else {\n      for (var i = 0; i < this.particles.length; i++) {\n        var p = this.particles[i];\n        p.playback(this.playbackTimer);\n      }\n    }\n    this.playbackTimer += 1;\n    if (this.playbackTimer == 500) {\n      this.playbackTimer = 0;\n    }\n    this.timer += deltat * 5;\n    return this;\n  }\n};\nexport default Atom;","map":{"version":3,"names":["coinFlip","interpolateTrig","randRange","complex","sqrt","exp","sin","cos","add","subtract","multiply","divide","asin","atan","acos","pow","interpolateColor","themeTransientCycle","WHITE","A0","factorials","total","i","push","getFactorial","n","soln","getDoubleFactorial","choose","k","mapToSpherical","x","y","z","rho","theta","phi","getLaguerrePolynomial","l","kl","nl","signedPower","constTerm","radius","getLegendrePolynomial","m","sign","base","nextBase","nextPolynomial","getSphericalHarmonic","normalization","Math","PI","getFunctional","sphericals","getGradient","timer","delta","frho","ftheta","fphi","deltaRho","deltaTheta","deltaPhi","unitRho","unitTheta","unitPhi","getEnergyLevel","Particle","constructor","color","buffer","move","dx","dy","dz","addToPlayback","playback","history","set","setColor","Atom","props","superposition","particleCount","boxSize","playbackTimer","particles","length","newParticle","getProbabilityDistribution","getWavefunction","t","phase","weight","wavefunction","wavefunctionC","conjugate","getWavefunctionGradient","grad","getVelocity","gradient","gradientC","velocity","update","increment","deltat","p","oldNorm","j","im","newNorm","factor"],"sources":["/Users/joeyzhu/Projects/joey-j-zhu.github.io/src/components/fold/fold-graphics/atom.js"],"sourcesContent":["import { coinFlip, \n    interpolateTrig, \n    randRange, \n  } from '../../../utils/functions';\nimport { complex, sqrt, exp, sin, cos, add, subtract, multiply, divide, asin } from 'mathjs';\nimport { atan, acos, pow } from 'mathjs';\nimport { interpolateColor, themeTransientCycle, WHITE } from '../../../utils/colors';\n\nconst A0 = 0.25;\n\nconst factorials = [];\nvar total = 1;\nfor (var i = 0; i < 10; i++) {\n    total *= i + 1;\n    factorials.push(total);\n}\n\nexport function getFactorial(n) {\n    if (n <= 0) {\n        return 1;\n    } else if (n <= 10) {\n        return factorials[n - 1];\n    } else {\n        var soln = 1;\n        for (var i = 0; i < n; i++) {\n            soln *= i + 1;\n        }\n        return soln;\n    }\n};\n\nexport function getDoubleFactorial(n) {\n    if (n <= 0) {\n        return 1;\n    } else {\n        var soln = 1;\n        for (var i = 0; i < n; i++) {\n            if (i + 1 % 2 == n % 2) {\n                soln *= i + 1;\n            }\n        }\n        return soln;\n    }\n};\n\nexport function choose(n, k) {\n    return getFactorial(n) / (getFactorial(n - k) * getFactorial(k));\n};\n\nexport function mapToSpherical(x, y, z) {\n    var rho = sqrt(x * x + y * y + z * z);\n    var theta = atan(y / x);\n    var phi = acos(z / rho);\n    return [rho, theta, phi];\n}\n\n\nexport function getLaguerrePolynomial(n, l) {\n    return (rho) => {\n        var kl = 2 * l + 1;\n        var nl = n - l - 1;\n        var signedPower = 1;\n        var total = 0;\n        for (var i = 0; i <= n; i++) {\n            total += signedPower * getFactorial(nl) * choose(kl + nl, nl - i) / getFactorial(i);\n            signedPower *= -rho;\n        }\n        var constTerm = sqrt(pow(2 / (n * A0), 3) * getFactorial(n - l - 1) / (2 * n * getFactorial(n + l)));\n        var radius = (2 * rho) / (n * A0);\n        return total * constTerm * exp(radius / -2) * pow(radius, l);\n    }\n};\n\nexport function getLegendrePolynomial(l, m) {\n    return (rho) => {\n        var sign = m % 2 == 0 ? 1 : -1;\n        var base = sign * getDoubleFactorial(2 * m - 1) * pow((1 - rho * rho), l / 2);\n        var nextBase = (2 * m + 1) * rho * base;\n        if (l - m == 0) {\n            return base;\n        } else if (l - m == 1) {\n            return nextBase;\n        } else if (l - m >= 2) {\n            for (var i = 0; i < l - m - 1; i++) {\n                var nextPolynomial = ((2 * l + 1) * nextBase - (l + m) * base) / (l - m + 1);\n                base = nextBase;\n                nextBase = nextPolynomial;\n            }\n            return nextPolynomial;\n        }\n    }\n    //return (rho) => rho;\n};\n\nexport function getSphericalHarmonic(l, m) {\n    return (phi) => {\n        var sign = m % 2 == 0 ? 1 : -1;\n        var normalization = complex(sqrt((getFactorial(l - m) * (2 * l + 1)) / (getFactorial(l + m) * 4 * Math.PI)), 0);\n        return multiply(sign, normalization, exp(complex(0, m * phi)));\n    };\n};\n\nfunction getFunctional(n, l, m) {\n    return (x, y, z) => {\n        var sphericals = mapToSpherical(x, y, z);\n        var rho = sphericals[0];\n        var theta = sphericals[1];\n        var phi = sphericals[2];\n        \n        return multiply(getLaguerrePolynomial(n, l)(rho), getLegendrePolynomial(l, m)(cos(theta)), getSphericalHarmonic(l, m)(phi));\n    };\n}\n\nfunction getGradient(n, l, m, timer) {\n\n    return (x, y, z) => {\n        var delta = 0.00000001;\n\n        var sphericals = mapToSpherical(x, y, z);\n        var rho = sphericals[0];\n        var theta = sphericals[1];\n        var phi = sphericals[2];\n\n        var frho = getLaguerrePolynomial(n, l)(rho + delta / 2);\n        var ftheta = getLegendrePolynomial(l, m)(cos(theta) + delta / 2);\n        var fphi = getSphericalHarmonic(l, m)(phi + delta / 2);\n\n        var deltaRho = divide(subtract(frho, getLaguerrePolynomial(n, l)(rho - delta / 2)), (delta));\n        var deltaTheta = divide(subtract(ftheta, getLegendrePolynomial(l, m)(cos(theta) - delta / 2)), (delta * rho));\n        var deltaPhi = divide(subtract(fphi, getSphericalHarmonic(l, m)(phi - delta / 2)), (delta * rho * Math.sin(theta)));\n\n        deltaRho = multiply(deltaRho, ftheta, fphi);\n        deltaTheta = multiply(deltaTheta, frho, fphi);\n        deltaPhi = multiply(deltaPhi, frho, ftheta);\n\n        var unitRho = [sin(theta) * cos(phi), sin(theta) * sin(phi), cos(theta)];\n        var unitTheta = [cos(theta) * cos(phi), cos(theta) * sin(phi), sin(theta) * -1];\n        var unitPhi = [sin(phi), cos(phi)*-1, 0.0];\n\n        return [\n            add(multiply(unitRho[0], deltaRho), multiply(unitTheta[0], deltaTheta), multiply(unitPhi[0], deltaPhi)),\n            add(multiply(unitRho[1], deltaRho), multiply(unitTheta[1], deltaTheta), multiply(unitPhi[1], deltaPhi)),\n            add(multiply(unitRho[2], deltaRho), multiply(unitTheta[2], deltaTheta), multiply(unitPhi[2], deltaPhi)),\n        ];\n    }\n}\n\nfunction getEnergyLevel(n) {\n    return 5 / (n * n);\n}\n\n\nclass Particle {\n    constructor(x, y, z) {\n        this.x = x;\n        this.y = y;\n        this.z = z;\n        this.color = WHITE;\n        this.buffer = [];\n    }\n\n    move(dx, dy, dz, addToPlayback) {\n        if (addToPlayback) {\n            this.buffer.push({x: this.x, y: this.y, z: this.z, color: themeTransientCycle(WHITE, WHITE, (1 + Math.sin(Math.atan(this.y / this.x) / 2)) / 2, interpolateTrig)});\n        }\n        this.x += dx;\n        this.y += dy;\n        this.z += dz;\n    }\n\n    playback(history) {\n        this.set(this.buffer[history].x, this.buffer[history].y, this.buffer[history].z);\n        this.setColor(this.buffer[history].color);\n    }\n\n    set(dx, dy, dz) {\n        this.x = dx;\n        this.y = dy;\n        this.z = dz;\n    }\n\n    setColor(color) {\n        this.color = color;\n    }\n}\n\n\nconst Atom = class {\n    constructor (props) {\n        this.superposition = props.superposition;\n        this.particleCount = props.particleCount;\n        this.boxSize = props.boxSize;\n        this.timer = 0;\n        this.playbackTimer = -500;\n\n        this.particles = [];\n        \n        while (this.particles.length < props.particleCount) {\n            var theta = randRange(0, Math.PI * 2);\n            var phi = asin(randRange(-1, 1));\n            var radius = 1 / randRange(0.5, 2);\n            var newParticle = new Particle(\n                radius * cos(theta) * cos(phi),\n                radius * cos(theta) * sin(phi),\n                radius * sin(theta),\n            );\n            if (coinFlip(100000 * this.getProbabilityDistribution(newParticle.x, newParticle.y, newParticle.z, 0))) {\n                this.particles.push(newParticle);\n            }\n        }\n    }\n\n    getWavefunction(x, y, z, t) {\n        var total = 0;\n        for (var i = 0; i < this.superposition.length; i++) {\n            var phase = exp(complex(0, getEnergyLevel(this.superposition[i].n) * t));\n            total = add(total, multiply(phase, this.superposition[i].weight, getFunctional(this.superposition[i].n, this.superposition[i].l, this.superposition[i].m)(x, y, z)));\n        }\n\n        return total;\n    }\n\n    getProbabilityDistribution(x, y, z, t) {\n        var wavefunction = this.getWavefunction(x, y, z, t);\n        var wavefunctionC = wavefunction.conjugate();\n        return multiply(wavefunction, wavefunctionC);    \n    }\n\n    getWavefunctionGradient(x, y, z, t) {\n        var total = [complex(0, 0), complex(0, 0), complex(0, 0)];\n        for (var i = 0; i < this.superposition.length; i++) {\n            var phase = exp(complex(0, getEnergyLevel(this.superposition[i].n) * t));\n            var grad = getGradient(this.superposition[i].n, this.superposition[i].l, this.superposition[i].m, this.timer)(x, y, z, t);\n            total[0] = add(total[0], multiply(phase, this.superposition[i].weight, grad[0]));\n            total[1] = add(total[1], multiply(phase, this.superposition[i].weight, grad[1]));\n            total[2] = add(total[2], multiply(phase, this.superposition[i].weight, grad[2]));\n        }\n        return total;\n    }\n    \n    getVelocity(x, y, z, t) {\n        var wavefunction = 1;\n        var wavefunctionC = 1;\n        var gradient = this.getWavefunctionGradient(x, y, z, t);\n        var gradientC = [\n            gradient[0].conjugate(), \n            gradient[1].conjugate(), \n            gradient[2].conjugate(), \n        ];\n        var velocity = [\n            divide(subtract(multiply(wavefunctionC, gradient[0]), multiply(wavefunction, gradientC[0])), add(1e-8, multiply(wavefunction, wavefunctionC))),\n            divide(subtract(multiply(wavefunctionC, gradient[1]), multiply(wavefunction, gradientC[1])), add(1e-8, multiply(wavefunction, wavefunctionC))),\n            divide(subtract(multiply(wavefunctionC, gradient[2]), multiply(wavefunction, gradientC[2])), add(1e-8, multiply(wavefunction, wavefunctionC)))\n        ];\n        var t = 1 - sin(atan(velocity[2] / velocity[1]) / 2) / 2;\n        return velocity;\n    }\n\n    update(increment) {\n        var deltat = 0.025;\n        if (this.playbackTimer < 0) {\n            for (var i = 0; i < this.particles.length; i++) {\n                var p = this.particles[i];\n                var oldNorm = Math.sqrt(p.x * p.x + p.y * p.y + p.z * p.z);\n                for (var j = 0; j < 5; j++) {\n                    var velocity = this.getVelocity(p.x, p.y, p.z, this.timer);\n                    p.move(velocity[0].im * deltat, velocity[1].im * deltat, velocity[2].im * deltat, false);\n                }\n                var newNorm = Math.sqrt(p.x * p.x + p.y * p.y + p.z * p.z);\n                var factor = ((oldNorm - newNorm) / newNorm) * 0.05;\n                p.move(p.x * factor, p.y * factor, p.z * factor, true);\n            }\n        } else {\n            for (var i = 0; i < this.particles.length; i++) {\n                var p = this.particles[i];\n                p.playback(this.playbackTimer);\n            }\n        }\n        this.playbackTimer += 1;\n        if (this.playbackTimer == 500) {\n            this.playbackTimer = 0;\n        }\n        this.timer += deltat * 5;\n        return this;\n    }\n}\n\nexport default Atom;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}